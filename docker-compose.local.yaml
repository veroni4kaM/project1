version: "3"

services:

  api:
    build:
      dockerfile: Dockerfile.local
    restart: unless-stopped
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
    #    depends_on:
    #      - mysql
    networks:
      courselab:
        ipv4_address: ${API_IPV4}

  frontend:
    build:
      dockerfile: ../docker/frontend/Dockerfile.local
    command: npm start
    stdin_open: true
    tty: true
    restart: unless-stopped
    volumes:
      - ./frontend:${FRONTEND_DIRECTORY}
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
#
  nginx:
    build:
      dockerfile: Dockerfile.local
    restart: unless-stopped
    volumes:
      - ./docker/certs/local:/etc/nginx/certs
    ports:
      - 80:80
      - 443:443
      - 8443:8443
    environment:
      NODE_ENV: dev
      NGINX_HOST: ${NGINX_HOST_LOCAL}
      NGINX_PORT: ${NGINX_PORT_LOCAL}
      NGINX_CERT_CRT: ${NGINX_CERT_CRT_LOCAL}
      NGINX_CERT_KEY: ${NGINX_CERT_KEY_LOCAL}
#
  mysql:
    image: mysql:8.0.20
    container_name: ${PROJECT_NAME}-mysql
    restart: unless-stopped
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - 13306:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} #login:root password:root
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    hostname: mysql.docker
    networks:
      courselab:
        ipv4_address: ${MYSQL_IPV4}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${PROJECT_NAME}-phpmyadmin
    restart: unless-stopped
    ports:
      - 8080:80
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${PHPMYADMIN_ROOT_PASSWORD}
      MYSQL_USER: ${PHPMYADMIN_MYSQL_USER}
      MYSQL_PASSWORD: ${PHPMYADMIN_MYSQL_PASSWORD}
      UPLOAD_LIMIT: 20M
    networks:
      courselab:
        ipv4_address: ${PHPMYADMIN_IPV4}

volumes:
 mysql: